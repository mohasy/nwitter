{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Modal.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["authService","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Modal","setShowModal","modalRef","useRef","ReactDom","createPortal","ref","e","current","document","getElementById","formatDate","curDate","resultDate","timegap","Date","curYear","getFullYear","curMonth","getMonth","curDay","getDate","Math","floor","Nweet","nweetObj","isOwner","userObj","editing","setEditing","text","newNweet","setNewNweet","showModal","onDeleteClick","window","confirm","deleteDoc","doc","id","deleteObject","attachmentUrl","toggleEditing","updateDoc","autoFocus","src","faGhost","userName","createdAt","faTrash","faPencilAlt","faCommentDots","NweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","uid","v4","uploadString","response","getDownloadURL","now","creatorId","displayName","addDoc","collection","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","q","query","orderBy","onSnapshot","snapshot","nweetArr","docs","map","marginTop","documentElement","scrollTop","faLongArrowAltUp","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","currentUser","getMyNweets","where","signOut","push","Navigation","display","justifyContent","to","marginRight","faBell","marginLeft","flexDirection","alignItems","fontSize","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","ReactDOM","render","StrictMode"],"mappings":"2PAiBeA,GAFDC,YAVS,CACnBC,OAAQC,0CACRC,WAAYD,gCACZE,YAAaF,uCACbG,UAAWH,gBACXI,cAAeJ,4BACfK,kBAAmBL,eACnBM,MAAON,8CAKkBO,eACdC,EAAYC,cACZC,EAAiBC,c,OCuCjBC,EAtDE,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACZC,EADY,KACLC,EADK,OAEaF,mBAAS,IAFtB,mBAEZG,EAFY,KAEFC,EAFE,OAGiBJ,oBAAS,GAH1B,mBAGZK,EAHY,KAGAC,EAHA,OAION,mBAAS,IAJhB,mBAIZO,EAJY,KAILC,EAJK,KAMbC,EAAW,SAACC,GAAW,IAAD,EACUA,EAA1BC,OAASC,EADO,EACPA,KAAMC,EADC,EACDA,MAGV,UAATD,EACAV,EAASW,GAES,aAATD,GACPR,EAAYS,IAIhBC,EAAQ,uCAAG,WAAMJ,GAAN,eAAAK,EAAA,yDACbL,EAAMM,iBADO,UAKNX,EALM,gCAOQY,YAA+BjC,EAAaiB,EAAOE,GAP3D,OAOLe,EAPK,+CAUQC,YAA2BnC,EAAaiB,EAAOE,GAVvD,QAULe,EAVK,eAaTE,QAAQC,IAAIH,GAbH,kDAgBTV,EAAS,KAAMc,SAhBN,0DAAH,sDAsBd,OACI,qCAEA,uBAAMR,SAAUA,EAAUS,UAAU,YAApC,UACI,uBAAOX,KAAK,QAAQY,KAAK,OAAOC,YAAY,QAAQC,UAAQ,EAACb,MAAOZ,EAAOQ,SAAUA,EAAUc,UAAU,cACzG,uBAAOX,KAAK,WAAWY,KAAK,WAAWC,YAAY,WAAWC,UAAQ,EAACb,MAAOV,EAAUM,SAAUA,EAAUc,UAAU,cACtH,uBAAOC,KAAK,SAASX,MAAOR,EAAa,iBAAmB,SAAWkB,UAAU,yBAChFhB,GAAS,sBAAMgB,UAAU,YAAhB,SAA6BhB,OAE3C,sBAAMoB,QAZY,kBAAMrB,GAAc,SAACsB,GAAD,OAAWA,MAYnBL,UAAU,aAAxC,SAAsDlB,EAAa,UAAY,uB,gBCMxEwB,EAnDD,WACV,IAAMC,EAAa,uCAAG,WAAOpB,GAAP,iBAAAK,EAAA,4DAQP,WALCH,EACRF,EADAC,OAAQC,OAMRQ,QAAQC,IAAI,UACZU,EAAW,IAAIC,KACC,WAATpB,IACPmB,EAAW,IAAIE,KAZD,SAeZC,YAAgBlD,EAAa+C,GAfjB,2CAAH,sDAkCnB,OACI,sBAAKR,UAAU,gBAAf,UACF,cAAC,IAAD,CAAkBY,KAAMC,IAAWC,MAAO,UAAWC,KAAK,KAAKC,MAAO,CAAEC,aAAc,MAEhF,cAAC,EAAD,IACA,sBAAKjB,UAAU,WAAf,UACI,yBAAQI,QAASG,EAAelB,KAAK,SAASW,UAAU,UAAxD,kCACqB,cAAC,IAAD,CAAiBY,KAAMM,SAE5C,yBAAQd,QAASG,EAAelB,KAAK,SAASW,UAAU,UAAxD,kCACqB,cAAC,IAAD,CAAiBY,KAAMO,gB,gBClD/CC,EAAQ,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAChBC,EAAWC,mBAQjB,OAAOC,IAASC,aAEd,qBAAKzB,UAAU,YAAY0B,IAAKJ,EAAUlB,QATzB,SAACuB,GACdA,EAAEvC,SAAWkC,EAASM,UACtB/B,QAAQC,IAAI,qBACduB,GAAa,KAMf,SACE,qBAAKrB,UAAU,QAAf,SACE,wBAAQI,QAAS,kBAAMiB,GAAa,IAAQrB,UAAU,UAAtD,mBAGJ6B,SAASC,eAAe,YCR5B,SAASC,EAAWC,GACnB,IAAWC,EAAYC,EAGvBA,GAFQ,IAAIC,MACZF,EAAa,IAAIE,KAAKH,KACZ,KAEV,IAAII,EAAUH,EAAWI,cACrBC,EAAYL,EAAWM,WAAa,EACpCC,EAASP,EAAWQ,UAexB,OAVER,EAFEC,GAAW,GACa,GAAvBQ,KAAKC,MAAMT,GACDQ,KAAKC,MAAgB,GAAVT,GAAgB,iBAG3BQ,KAAKC,MAAMT,GAAW,uBAIvBE,EAAU,IAAME,EAAW,IAAME,EAMhD,IAoFmBI,EApFL,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,QAAsB,KAAdC,QACAtE,oBAAS,IADK,mBACrCuE,EADqC,KAC5BC,EAD4B,OAEZxE,mBAASoE,EAASK,MAFN,mBAErCC,EAFqC,KAE3BC,EAF2B,OAGV3E,oBAAS,GAHC,mBAGrC4E,EAHqC,KAG1BhC,EAH0B,KAKtCiC,EAAa,uCAAG,sBAAA9D,EAAA,0DACP+D,OAAOC,QAAQ,+CADR,gCAIRC,YAAUC,YAAItF,EAAD,iBAAsByE,EAASc,MAJpC,uBAKRC,YAAalC,YAAIpD,EAAgBuE,EAASgB,gBALlC,2CAAH,qDASbC,EAAgB,kBAAMb,GAAW,SAAC5C,GAAD,OAAWA,MAC5Cd,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,6DACbL,EAAMM,iBADO,SAEPsE,YAAUL,YAAItF,EAAD,iBAAsByE,EAASc,KAAO,CACrDT,KAAMC,IAHG,OAKbF,GAAW,GALE,2CAAH,sDAmBd,OACI,mCACA,qBAAKjD,UAAU,QAAf,SACKgD,EACG,qCACA,uBAAMzD,SAAUA,EAAUS,UAAU,sBAApC,UACI,uBAAOC,KAAK,OAAOC,YAAY,kBAAkBZ,MAAO6D,EAAUhD,UAAQ,EAAC6D,WAAS,EAAC9E,SAlBpF,SAACC,GAAW,IAEZG,EACTH,EADAC,OAASE,MAEb8D,EAAY9D,IAcyGU,UAAU,cACnH,uBAAOC,KAAK,SAASX,MAAM,eAAeU,UAAU,eAExD,sBAAMI,QAAS0D,EAAe9D,UAAU,oBAAxC,uBAKI,qCACCqD,EAAY,sBAAKrD,UAAU,QAAf,UAAuB,cAAC,EAAD,CAAOqB,aAAcA,IAAgB,qBAAK4C,IAAKpB,EAASgB,cAAezD,QAAS,kBAAMiB,GAAa,SAAmB,KAE1J,oBAAGrB,UAAU,WAAb,cAA0B8C,EAClB,sBAAM9C,UAAU,OAAhB,SACA,cAAC,IAAD,CAAiBY,KAAMsD,IAASpD,MAAO,cAE7C,sBAAMd,UAAU,OAAhB,SACF,cAAC,IAAD,CAAiBY,KAAMsD,IAASpD,MAAO,WALvC,IAMU+B,EAASsB,SANnB,IAM6B,uBAAMnE,UAAU,YAAhB,oBAAqC+B,EAAWc,EAASuB,iBAClF,6BAAKvB,EAASK,OACbL,EAASgB,eACV,8BACI,qBAAKI,IAAKpB,EAASgB,cAAezD,QAhCxC,WACdiB,GAAa,IA+B6DrB,UAAU,iBAEpE,sBAAKA,UAAU,iBAAf,UACK8C,GACG,qCACI,sBAAM1C,QAASkD,EAAf,SACI,cAAC,IAAD,CAAiB1C,KAAMyD,QAE3B,sBAAMjE,QAAS0D,EAAf,SACI,cAAC,IAAD,CAAiBlD,KAAM0D,WAIvC,+BACI,cAAC,IAAD,CAAiB1D,KAAO2D,mB,QCGrCC,EA3GM,SAAC,GAAe,IAAdzB,EAAa,EAAbA,QAAa,EACNtE,mBAAS,IADH,mBACzBgG,EADyB,KAClBC,EADkB,OAEIjG,mBAAS,IAFb,mBAEzBkG,EAFyB,KAEbC,EAFa,KAI1BrF,EAAQ,uCAAG,WAAMoC,GAAN,qBAAAnC,EAAA,yDACC,KAAViF,EADS,oDAKb9C,EAAElC,iBACEoE,EAAgB,GAED,KAAfc,EARS,wBAUHE,EAAgBnD,YAAIpD,EAAD,UAAoByE,EAAQ+B,IAA5B,YAAmCC,gBAVnD,SAYcC,YAAaH,EAAeF,EAAY,YAZtD,cAYHM,EAZG,iBAeaC,YAAeD,EAASvD,KAfrC,QAeTmC,EAfS,sBA2BW,OARlBhB,EAAW,CACbK,KAAMuB,EACNL,UAAWjC,KAAKgD,MAChBC,UAAWrC,EAAQ+B,IACnBjB,gBACAM,SAAUpB,EAAQsC,cAGVlB,WAAmBtB,EAASsB,SAAU,QA3BrC,UA6BPmB,YAAOC,YAAWnH,EAAW,UAAWyE,GA7BjC,QA8Bb6B,EAAS,IACTE,EAAc,IA/BD,4CAAH,sDA8Dd,OACI,uBAAMrF,SAAUA,EAAUS,UAAU,cAApC,UACI,sBAAKA,UAAU,0BAAf,UACI,uBACAA,UAAU,sBACVV,MAAOmF,EACPvF,SAlCK,SAACC,GAAW,IACTG,EAAWH,EAAnBC,OAAQE,MAChBoF,EAASpF,IAiCDW,KAAK,OACLC,YAAY,uBACZsF,UAAW,MAEX,uBAAOvF,KAAK,SAASX,MAAM,SAASU,UAAU,2BAElD,wBAAOyF,IAAI,cAAczF,UAAU,sBAAnC,UACI,8CACA,cAAC,IAAD,CAAiBY,KAAM8E,SAE/B,uBAAO/B,GAAG,cACV1D,KAAK,OACL0F,OAAO,UACPzG,SA1CiB,SAACC,GAAU,IAMtByG,EAFFzG,EADAC,OAASyG,MAGS,GAEhBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAAkB,IAGdC,EAChBD,EADAE,cAAgBD,OAEpBtB,EAAcsB,IAElBJ,EAAOM,cAAcR,IA2BrB5E,MAAO,CACLqF,QAAS,KAEV1B,GACI,sBAAK3E,UAAU,0BAAf,UACA,qBACEiE,IAAKU,EACL3D,MAAO,CACLsF,gBAAiB3B,KAGrB,sBAAK3E,UAAU,qBAAqBI,QAlCnB,kBAAMwE,EAAc,KAkCrC,UACE,0CACA,cAAC,IAAD,CAAiBhE,KAAM2F,gBC1DvBC,EA1CD,SAAC,GAAe,IAAdzD,EAAa,EAAbA,QAAa,EACGtE,mBAAS,IADZ,mBAClBgI,EADkB,KACVC,EADU,KAgBzBC,qBAAU,WACN,IAAMC,EAAIC,YAAMtB,YAAWnH,EAAU,UAAW0I,YAAQ,YAAa,SACrEC,YAAWH,GAAG,SAACI,GAEX,IAAMC,EAAWD,EAASE,KAAKC,KAAI,SAACzD,GAAD,oBAC/BC,GAAID,EAAIC,IACLD,EAAI/D,WAEP+G,EAAUO,QAEnB,IAIH,OACI,sBAAKjH,UAAU,YAAf,UACI,cAAC,EAAD,CAAc+C,QAASA,IACvB,qBAAK/B,MAAO,CAAEoG,UAAW,IAAzB,SACKX,EAAOU,KAAI,SAAC1C,GAAD,OACR,cAAC,EAAD,CAAsB5B,SAAU4B,EAAO3B,QAAS2B,EAAMW,YAAcrC,EAAQ+B,KAAhEL,EAAMd,SAG1B,qBAAK3D,UAAU,4BAA4BI,QAVjC,kBAAOyB,SAASwF,gBAAgBC,UAAY,GAUtD,SAA+D,sBAAMtH,UAAU,SAAhB,SAAyB,cAAC,IAAD,CAAiBY,KAAM2G,c,QCxC5G,cAA+B,IAA5BC,EAA2B,EAA3BA,YAAazE,EAAc,EAAdA,QACrB0E,EAAUC,cADyB,EAEGjJ,mBAASsE,EAAQsC,aAFpB,mBAElCsC,EAFkC,KAElBC,EAFkB,KAenCrI,EAAQ,uCAAG,WAAMJ,GAAN,SAAAK,EAAA,yDACbL,EAAMM,iBAEHsD,EAAQsC,cAAgBsC,EAHd,4BAIHE,IAJG,SAIiBpK,EAAYqK,YAJ7B,+BAI0C,CAC/CzC,YAAasC,GALR,oCASbH,IATa,4CAAH,sDAaRO,EAAW,uCAAG,sBAAAvI,EAAA,sDACNqH,YACNtB,YAAWnH,EAAW,UACtB4J,YAAM,YAAa,KAAMjF,EAAQ+B,MAHrB,2CAAH,qDAcjB,OAJA6B,qBAAU,WACNoB,MACD,IAGC,sBAAK/H,UAAU,YAAf,UACI,uBAAMT,SAAUA,EAAUS,UAAU,cAApC,UACA,uBAAOd,SApCE,SAACC,GAAW,IAEZG,EACTH,EADAC,OAASE,MAEbsI,EAAkBtI,IAgCaW,KAAK,OAAO+D,WAAS,EAAC9D,YAAY,qBAAMZ,MAAOqI,EAAgB3H,UAAU,cACpG,uBAAOC,KAAK,SAASX,MAAM,iBAAiBU,UAAU,UAAUgB,MAAO,CAAEoG,UAAW,SAEpF,sBAAMpH,UAAU,2BAA2BI,QA5C7B,WAClB3C,EAAYwK,UACZR,EAAQS,KAAK,MA0CT,yBCxBGC,EAzBI,SAAC,GAAD,IAAGpF,EAAH,EAAGA,QAAH,OACnB,8BACI,qBAAI/B,MAAO,CAAEoH,QAAS,OAAQC,eAAgB,SAAUjB,UAAW,IAAnE,UACI,6BACI,cAAC,IAAD,CAAMkB,GAAG,IAAItH,MAAO,CAAEuH,YAAa,IAAnC,SACE,cAAC,IAAD,CAAiB3H,KAAM4H,IAAQ1H,MAAO,UAAWC,KAAK,WAG5D,6BACI,eAAC,IAAD,CAAMuH,GAAG,WAAWtH,MAAO,CACzByH,WAAY,GACZL,QAAS,OACTM,cAAe,SACfC,WAAY,SACZC,SAAU,IALZ,UAQF,cAAC,IAAD,CAAiBhI,KAAMsD,IAASpD,MAAO,UAAWC,KAAK,OACvD,uBAAMC,MAAO,CAAEoG,UAAW,IAA1B,UACGrE,EAAQsC,YAAYtC,EAAQsC,YAAc,OAD7C,2BCsBKwD,EArCG,SAAC,GAAwC,IAAvCrB,EAAsC,EAAtCA,YAAasB,EAAyB,EAAzBA,WAAY/F,EAAa,EAAbA,QACzC,OACI,eAAC,IAAD,WACK+F,GAAc,cAAC,EAAD,CAAY/F,QAASA,IACpC,cAAC,IAAD,UACK+F,EACG,sBACA9H,MAAO,CACL+H,SAAU,IACVC,MAAO,OACPC,OAAQ,SACR7B,UAAW,GACXgB,QAAS,OACTC,eAAgB,UAPlB,UAUI,cAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,CAAMpG,QAASA,MAEnB,cAAC,IAAD,CAAOmG,OAAK,EAACC,KAAK,WAAlB,SACI,cAACC,EAAD,CAASrG,QAASA,EAASyE,YAAaA,SAKhD,mCACI,cAAC,IAAD,CAAO0B,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,cCObE,MApCf,WAAgB,IAAD,EACW5K,oBAAS,GADpB,mBACN6K,EADM,KACAC,EADA,OAEuB9K,oBAAS,GAFhC,mBAENqK,EAFM,KAEMU,EAFN,OAGiB/K,mBAAS,MAH1B,mBAGNsE,EAHM,KAGG0G,EAHH,KA6Bb,OAxBA9C,qBAAU,WACRlJ,EAAYiM,oBAAmB,SAACC,GAC3BA,GACDH,GAAc,GACdC,EAAWE,IAOXH,GAAc,GAGhBD,GAAQ,QAET,IASD,mCACGD,EAAO,cAAC,EAAD,CAAW9B,YARH,WAClB,IAAMmC,EAAOlM,EAAYqK,YACzB2B,EAAW,eAAKE,IAChBF,EAAWE,IAKoCb,WAAYA,EAAY/F,QAASA,IAAc,qB,MC9BlG6G,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjI,SAASC,eAAe,W","file":"static/js/main.4ef4dd80.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n\r\n  const app = initializeApp(firebaseConfig);\r\n\r\n  export const authService = getAuth();\r\n  export const dbService = getFirestore();\r\n  export const storageService = getStorage();","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n   \r\n    const onChange = (event) => {\r\n        const { target: {name, value} } = event;\r\n  \r\n        //name이 email과 같으면 email input에 값 setEmail\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n            //password와 같으면 password input에 값 setPassword\r\n          } else if (name === \"password\"){\r\n              setPassword(value);\r\n          }\r\n      };\r\n\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();  \r\n        try {\r\n            let data;\r\n\r\n            if(newAccount) {\r\n                //account 생성\r\n                data = await createUserWithEmailAndPassword(authService, email, password);\r\n            }else {\r\n                //로그인\r\n                data = await signInWithEmailAndPassword(authService, email, password);\r\n            }\r\n\r\n            console.log(data);\r\n\r\n        } catch(error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    \r\n    return (\r\n        <>\r\n        {/*로그인 폼 */}\r\n        <form onSubmit={onSubmit} className=\"container\">\r\n            <input name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\" />\r\n            <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\" />\r\n            <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\" } className=\"authInput authSubmit\" />\r\n            {error && <span className=\"authError\">{error}</span>}\r\n        </form>\r\n        <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Sign in\" : \"Create Account\"}</span>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default AuthForm;","import { authService } from \"fbase\";\r\nimport React from \"react\";\r\nimport { GithubAuthProvider, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter, faGoogle,  faGithub, } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\n    //login\r\nconst Auth =  () => {\r\n    const onSocialClick = async (event) => {\r\n        // console.log(event.target.name);\r\n        const {\r\n            target:{name},\r\n        } = event;\r\n\r\n        let provider;\r\n\r\n        if(name == \"google\") {\r\n            console.log(\"google\");\r\n            provider = new GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new GithubAuthProvider();\r\n        }\r\n\r\n        await signInWithPopup(authService, provider);\r\n        // try{\r\n        //     if (name === \"google\"){\r\n        //         provider = new GoogleAuthProvider();\r\n        //         const result = await signInWithPopup(authService, provider);\r\n        //         const credential = GoogleAuthProvider.credentialFromResult(result);\r\n        //     } \r\n        //     else if (name === \"github\"){\r\n        //         provider = new GithubAuthProvider();\r\n        //         const result = await signInWithPopup(authService, provider);\r\n        //         const credential = GithubAuthProvider.credentialFromResult(result);\r\n        //     }\r\n        //     await authService.signInWithPopup(provider);\r\n\r\n        // }catch(error){\r\n        //     console.log(error);\r\n        // }\r\n    };\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n      <FontAwesomeIcon  icon={faTwitter} color={\"#04AAFF\"} size=\"3x\" style={{ marginBottom: 30 }}\r\n      />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Auth;\r\n\r\n","import React, { useRef } from \"react\";\r\nimport ReactDom from \"react-dom\";\r\n\r\nexport const Modal = ({ setShowModal }) => {\r\n  const modalRef = useRef();\r\n  const closeModal = (e) => {\r\n    if (e.target === modalRef.current) {\r\n        console.log(\"modal close click\");\r\n      setShowModal(false);\r\n    }\r\n  };\r\n  \r\n  return ReactDom.createPortal(\r\n      \r\n    <div className=\"container\" ref={modalRef} onClick={closeModal}>\r\n      <div className=\"modal\">\r\n        <button onClick={() => setShowModal(false)} className=\"Xbutton\">X</button>\r\n      </div>\r\n    </div>,\r\n    document.getElementById(\"portal\")\r\n  );\r\n};","import { doc, deleteDoc, updateDoc } from \"@firebase/firestore\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { ref, deleteObject } from \"firebase/storage\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt, faCommentDots, faGhost } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Modal } from \"./Modal\";\r\nimport Comment from \"components/Comment\";\r\nimport { query, collection, onSnapshot, orderBy } from \"@firebase/firestore\";\r\n\r\n// 시간 기능 추가 \r\nfunction formatDate(curDate) {\r\n\tvar today, resultDate, timegap;\r\n\ttoday = new Date();\r\n\tresultDate = new Date(curDate);\r\n\ttimegap = (today - resultDate)/(60*60*1000);\r\n\t\r\n\tvar curYear = resultDate.getFullYear();\r\n\tvar curMonth = (resultDate.getMonth() + 1);\r\n\tvar curDay = resultDate.getDate();\r\n\r\n\t// Time (minutes * seconds * millisecond)\r\n\tif (timegap <= 24) {\r\n\t\tif (Math.floor(timegap) == 0) {\r\n\t\t\tresultDate = Math.floor(timegap * 24) + ' 분 전';\r\n\t\t}\r\n\t\telse {\r\n\t\t\tresultDate = Math.floor(timegap) + ' 시간 전';\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tresultDate = curYear + '-' + curMonth + '-' + curDay;\r\n\t}\r\n\t\r\n\treturn resultDate;\r\n};\r\n\r\nconst Nweet = ({nweetObj, isOwner,userObj }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"삭제하겠습니까?\");\r\n        if(ok){\r\n            // await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await deleteDoc(doc(dbService, `nweets/${nweetObj.id}`));\r\n            await deleteObject(ref(storageService, nweetObj.attachmentUrl));\r\n        }\r\n    }\r\n    \r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await updateDoc(doc(dbService, `nweets/${nweetObj.id}`), {\r\n            text: newNweet,\r\n        });\r\n        setEditing(false);\r\n    }\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value}\r\n        } = event;\r\n        setNewNweet(value);\r\n    };\r\n    \r\n    const openModal = () => {\r\n        setShowModal(true);\r\n        // console.log(\"click\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                    <input type=\"text\" placeholder=\"Edit Your nweet\" value={newNweet} required autoFocus onChange={onChange} className=\"formInput\" />\r\n                    <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                </form>\r\n                <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                    Cancel\r\n                </span>\r\n                </>\r\n            ):(\r\n                    <>\r\n                    {showModal ? <div className=\"modal\"><Modal setShowModal={setShowModal} /><img src={nweetObj.attachmentUrl} onClick={() => setShowModal(false)} /></div> : null}\r\n\r\n                    <h className=\"userName\"> {isOwner ? (\r\n                            <span className=\"icon\">\r\n                            <FontAwesomeIcon icon={faGhost} color={\"#df9dc6\"} />\r\n                            </span>\r\n                    ):<span className=\"icon\">\r\n                    <FontAwesomeIcon icon={faGhost} color={\"#777\"} />\r\n                    </span>} {nweetObj.userName} <span className=\"nweetTime\">&#8729; {formatDate(nweetObj.createdAt)}</span></h>\r\n                        <h4>{nweetObj.text}</h4>\r\n                        {nweetObj.attachmentUrl && \r\n                        <div>\r\n                            <img src={nweetObj.attachmentUrl} onClick={openModal} className=\"attachment\" />\r\n                        </div>}\r\n                        <div className=\"nweet__actions\">\r\n                            {isOwner && (\r\n                                <>\r\n                                    <span onClick={onDeleteClick}>\r\n                                        <FontAwesomeIcon icon={faTrash} />\r\n                                    </span>\r\n                                    <span onClick={toggleEditing}>\r\n                                        <FontAwesomeIcon icon={faPencilAlt} />\r\n                                    </span>\r\n                                    </>\r\n                            )}\r\n                        <span>\r\n                            <FontAwesomeIcon icon= {faCommentDots} />\r\n                        </span>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n\r\n        </>\r\n    )};   \r\n    export default Nweet;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { ref, uploadString, getDownloadURL } from \"firebase/storage\";\r\nimport { v4 } from \"uuid\";\r\nimport { addDoc, collection } from \"@firebase/firestore\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({userObj}) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async(e) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n          }\r\n\r\n        e.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        //업로드한 파일이 있어야 실행\r\n        if (attachment !== \"\") {\r\n            //파일 경로 참조 만들기\r\n            const attachmentRef = ref(storageService, `${userObj.uid}/${v4()}`);\r\n            //storage 참조 경로로 파일 업로드 하기\r\n            const response = await uploadString(attachmentRef, attachment, \"data_url\");\r\n            // console.log(response);\r\n            //storage에 있는 파일 URL로 다운로드 받기\r\n            attachmentUrl = await getDownloadURL(response.ref);\r\n            // console.log(attachmentUrl);\r\n        }\r\n\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n            userName: userObj.displayName\r\n        }\r\n    \r\n        if(nweetObj.userName == null)  nweetObj.userName= \"User\";\r\n        \r\n        await addDoc(collection(dbService, \"nweets\"), nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const { target:{value} } = event;\r\n        setNweet(value);\r\n    };\r\n    // console.log(nweets);\r\n\r\n    const onFileChange = (event) => {\r\n        // console.log(event.target.files);\r\n        const {\r\n            target: {files}\r\n        } = event;\r\n        //한개의 파일만 받음\r\n        const theFile = files[0];\r\n        // console.log(theFile);\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            // console.log(finishedEvent);\r\n            const {\r\n                currentTarget: {result}\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n\r\n    //파일 지우기\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n    \r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                className=\"factoryInput__input\"\r\n                value={nweet}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"What's on your mind?\"\r\n                maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n        <input id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }} />\r\n        {attachment && \r\n             <div className=\"factoryForm__attachment\">\r\n             <img\r\n               src={attachment}\r\n               style={{\r\n                 backgroundImage: attachment,\r\n               }}\r\n             />\r\n             <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n               <span>Remove</span>\r\n               <FontAwesomeIcon icon={faTimes} />\r\n             </div>\r\n            </div>\r\n        }\r\n    </form>\r\n    )}\r\n\r\nexport default NweetFactory;","import React, { useEffect, useState } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport { query, collection, onSnapshot, orderBy } from \"@firebase/firestore\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {  faLongArrowAltUp } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Home =  ({userObj}) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    // const getNweets = async() =>{\r\n    //     const q = query(collection(dbService,\"nweets\"));\r\n    //     const querySnapshot = await getDocs(q);\r\n\r\n    //     querySnapshot.forEach((doc)=>{\r\n    //         const nweetObj = {\r\n    //             ...doc.data(),\r\n    //             id: doc.id,\r\n    //         }\r\n    //         setNweets(prev =>[nweetObj, ...prev]);\r\n    //     });\r\n    // };\r\n\r\n    useEffect(() => {\r\n        const q = query(collection(dbService,\"nweets\"), orderBy(\"createdAt\", \"desc\"));\r\n        onSnapshot(q, (snapshot) => {\r\n            // console.log(\"변화함\");\r\n            const nweetArr = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n                }));\r\n                setNweets(nweetArr);\r\n        });\r\n    }, []);\r\n\r\n    const moveToTop = () => (document.documentElement.scrollTop = 0);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\r\n                    ))}\r\n            </div>\r\n            <div className=\"factoryInput__arrow upBtn\" onClick={moveToTop}><span className=\"arrows\"><FontAwesomeIcon icon={faLongArrowAltUp} /></span></div>\r\n        </div>\r\n    );\r\n};\r\nexport default Home;","import { authService, dbService } from \"fbase\";\r\nimport React,{useEffect, useState} from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { collection, query, where } from \"@firebase/firestore\";\r\nimport { updateProfile } from \"@firebase/auth\";\r\n\r\nexport default ( {refreshUser, userObj} ) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value}\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n\r\n        if(userObj.displayName !== newDisplayName){\r\n            await updateProfile(await authService.currentUser, {\r\n                displayName: newDisplayName,\r\n                });\r\n        } \r\n        \r\n        refreshUser();\r\n            \r\n    }\r\n\r\n    const getMyNweets = async() => {\r\n        const q = query(\r\n            collection(dbService, \"nweets\"),\r\n            where(\"creatorId\", \"==\", userObj.uid)\r\n        );\r\n        // const querySnapshot = await getDocs(q);\r\n        // querySnapshot.forEach((doc) => {\r\n        //     console.log(doc.id, \" => \", doc.data());\r\n        // });\r\n    }\r\n    useEffect(() => {\r\n        getMyNweets();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n            <input onChange={onChange} type=\"text\" autoFocus placeholder=\"닉네임\" value={newDisplayName} className=\"formInput\" />\r\n            <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" style={{ marginTop: 10, }} />\r\n        </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n};","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGhost, faBell } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ( {userObj} ) => \r\n<nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n            <Link to=\"/\" style={{ marginRight: 10 }}>\r\n              <FontAwesomeIcon icon={faBell} color={\"#e6c5da\"} size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n            <Link to=\"/profile\" style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n          <FontAwesomeIcon icon={faGhost} color={\"#e6c5da\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName?userObj.displayName : \"User\"}'s Profile\r\n          </span>\r\n          </Link>\r\n        </li>\r\n    </ul>\r\n</nav>;\r\nexport default Navigation;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n// import {Redirect} from \"react-router\";\r\n\r\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                    style={{\r\n                      maxWidth: 890,\r\n                      width: \"100%\",\r\n                      margin: \"0 auto\",\r\n                      marginTop: 80,\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser} / >\r\n                        </Route>\r\n                        {/* <Redirect from=\"*\" to=\"/\" /> */}\r\n                        </div>\r\n                ) : (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Auth />\r\n                        </Route> \r\n                        {/*  \"/\" 외의 route로 가면 \"/\"로 되돌아감 */}\r\n                        {/* <Redirect from=\"*\" to=\"/\" /> */}\r\n                    </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\nexport default AppRouter;","// import logo from './logo.svg';\r\n// import './App.css';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport AppRouter from \"components/Router\";\r\nimport {authService} from \"fbase\";\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      if(user){\r\n        setIsLoggedIn(true);\r\n        setUserObj(user);\r\n        // setUserObj({\r\n        //   displayName: user.displayName,\r\n        //   uid: user.uid,\r\n        //   updateProfile: (args) => user.updateProfile(args),\r\n        // });\r\n      } else {\r\n        setIsLoggedIn(false);\r\n      }\r\n\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    setUserObj({ ...user });\r\n    setUserObj(user);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={isLoggedIn} userObj={userObj} /> : \"Initializing...\"}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport App from './components/App';\r\n// import reportWebVitals from './reportWebVitals';\r\nimport \"./style.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}